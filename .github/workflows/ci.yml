name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"

    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: Install dependencies
      run: uv sync --extra dev --extra test

    - name: Run linting
      run: uv run ruff check src/ tests/

    - name: Check formatting
      run: uv run ruff format --check src/ tests/

    - name: Run unit tests
      run: uv run pytest tests/ -v -m "not slow" --timeout=30

    - name: Run integration tests
      run: uv run pytest tests/ -v -m "integration" --timeout=60

    - name: Run all tests with coverage
      run: uv run pytest tests/ -v --cov=src/fdprof --cov-report=xml --cov-report=term

    - name: Upload coverage reports
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

    - name: Test CLI functionality
      run: |
        # Test basic help
        uv run fdprof --help
        # Test demo (basic smoke test)
        timeout 10s uv run fdprof echo "CI test" || true
        # Test save functionality
        uv run fdprof --save test_plot.png echo "CI plot test" || true
        ls -la test_plot.png || echo "Plot not generated (expected in CI)"

    - name: Clean up artifacts
      run: |
        rm -f fdprof.jsonl test_plot.png
